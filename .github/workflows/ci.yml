name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2019]
        node-version: [20.x]
        # Adds a platform value to the matrix, used later on to run the appropriate
        # package command.
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: mac
          - os: windows-2019
            platform: win

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout submodules
        shell: bash
        run: |
          git submodule update --init --remote backend/vcpkg
          git submodule update --init --remote backend/extern/afv-native

      - name: Get Git revision (windows)
        if: matrix.os == 'windows-2019'
        run: |
          $SUBMODULE_REV = & git rev-parse HEAD:./backend/vcpkg
          echo "SUBMODULE_REV=$SUBMODULE_REV" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Get Git revision (macos and linux)
        if: matrix.os != 'windows-2019'
        run: |
          SUBMODULE_REV=$(git rev-parse HEAD:./backend/vcpkg)
          echo "SUBMODULE_REV=$SUBMODULE_REV" >> $GITHUB_ENV

      - name: Restore vcpkg from cache
        uses: actions/cache@v4
        with:
          path: |
            backend/vcpkg
            backend/build/vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('backend/vcpkg.json')}}-${{ env.SUBMODULE_REV }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.x'

      - name: Update cmake
        if: matrix.os != 'macos-latest'
        run: |
          pip install cmake
          cmake --version

      - name: Setup environment
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew upgrade cmake
          cmake --version

      - name: Install SFML native dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxrandr-dev libxcursor-dev libxi-dev libudev-dev libgl1-mesa-dev pkg-config

      - name: Install dependencies
        run: |
          npm -g i cmake-js
          npm run build:backend
          npm install

      - name: Run eslint
        run: npm run lint

      - name: Build and package
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build:${{ matrix.platform }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TrackAudio-${{ matrix.platform }}
          path: dist/trackaudio-*.*
