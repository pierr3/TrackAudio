name: Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2019]
        arch: [x64, arm64]
        node-version: [20.x]
        exclude:
          - os: windows-2019
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.x"

      - name: Update cmake
        if: matrix.os != 'macos-latest'
        run: |
          pip install cmake
          cmake --version

      - name: Setup environment
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew upgrade cmake
          cmake --version

      - name: Installing codesign certificates
        if: matrix.os == 'macos-latest'
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_CERT_DATA }}
          p12-password: ${{ secrets.APPLE_CERT_PASSWORD }}

      - name: Install dependencies (x64)
        if: matrix.arch == 'x64'
        run: |
          npm -g i cmake-js
          cd backend/
          npm install
          cmake-js compile -B Release -a x64
          node custom_build.mjs
          npm pack
          cd ..
          npm install ./backend/trackaudio-afv-1.0.0.tgz
          npm install

      - name: Install dependencies (macOs arm64)
        if: matrix.arch == 'arm64' && matrix.os == 'macos-latest'
        run: |
          npm -g i cmake-js
          cd backend/
          npm install
          cmake-js compile -B Release -a arm64
          node custom_build.mjs
          npm pack
          cd ..
          npm install ./backend/trackaudio-afv-1.0.0.tgz
          npm install

      - name: Install dependencies (linux arm64 cross compile)
        if: matrix.arch == 'arm64' && matrix.os == 'ubuntu-latest'
        run: |
          npm -g i cmake-js
          sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          cd backend/
          npm install
          cmake-js compile -B Release -a arm64 --CD -DVCPKG_TARGET_TRIPLET=arm64-linux
          node custom_build.mjs
          npm pack
          cd ..
          npm install ./backend/trackaudio-afv-1.0.0.tgz
          npm install

      - name: Package app
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_NOTARIZATION_PASSWORD: ${{ secrets.APPLE_NOTARIZATION_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: npm run make -- --arch ${{ matrix.arch }}

      - name: Make AppImage
        if: matrix.os == 'ubuntu-latest'
        run: |
          chmod +x ./scripts/make-appimage.sh
          cp ./scripts/make-appimage.sh ./
          ./make-appimage.sh ${{ matrix.arch }}

      - id: relinfo
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: pierr3/TrackAudio
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: softprops/action-gh-release@v2
        if: matrix.os == 'windows-2019'
        with:
          tag_name: ${{ steps.relinfo.outputs.release }}
          files: "out/make/**/*.exe"

      - name: Upload artifacts
        uses: softprops/action-gh-release@v2
        if: matrix.os == 'macos-latest'
        with:
          tag_name: ${{ steps.relinfo.outputs.release }}
          files: "out/make/**/*.dmg"

      - name: Upload artifacts
        uses: softprops/action-gh-release@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          tag_name: ${{ steps.relinfo.outputs.release }}
          files: | 
            "out/make/**/*.deb"
            "*.AppImage"
            "*.zsync"
