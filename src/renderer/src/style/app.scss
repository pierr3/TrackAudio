@import 'variables';

.form-control::-webkit-scrollbar-track {
  padding: 0px 0;
  background-color: $dark;
}

.form-control::-webkit-scrollbar {
  width: 2px;
}

.form-control::-webkit-scrollbar-thumb {
  background-color: $body-color;
}

.toolbar-item {
  position: relative;
  // margin-right: 20px;
  // margin-left: 20px;
  font-family: $font-medium;
  height: $toolbar-item-height;
  font-weight: 500;
}

.toolbar-btn {
  height: 100%;
  margin: 0px;
  font-size: $main-font-size;
  background-color: lighten($dark, 10);
  color: $body-color;
  border: 2px solid darken($dark, 5);
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: normal;
}

.unfocused-color {
  color: darken($body-color, 10%) !important;
}

.toolbar-btn-info {
  background-color: darken($info, 10) !important;
}

.toolbar-btn-active {
  background-color: darken($success, 10) !important;
}

.toolbar-btn.hover-enabled:hover {
  background-color: lighten($dark, 15);
}

.toolbar-btn.dark {
  background-color: darken($dark, 5);
}

.toolbar-btn.dark:hover {
  background-color: darken($dark, 0);
}

.toolbar-btn:last-child {
  border-top-right-radius: $toolbar-border-radius;
  border-bottom-right-radius: $toolbar-border-radius;
}

.toolbar-btn:first-child {
  border-top-left-radius: $toolbar-border-radius;
  border-bottom-left-radius: $toolbar-border-radius;
}

.toolbar-btn:not(:last-child) {
  border-right: 0px;
}

.toolbar-dropdown-value {
  cursor: pointer;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.toolbar-dropdown-menu {
  background-color: darken($dark, 5);
  max-height: 150px;
  overflow-y: scroll;
}

.toolbar-dropdown-menu::-webkit-scrollbar-track {
  padding: 0px 0;
  background-color: darken($dark, 5);
}

.toolbar-dropdown-menu::-webkit-scrollbar {
  width: 2px;
}

.toolbar-dropdown-menu::-webkit-scrollbar-thumb {
  background-color: $body-color;
}

.toolbar-dropdown-item {
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: $font-regular;
  font-size: $main-font-size;
  line-height: $main-font-size;
}

.toolbar-dropdown-item:hover {
  background-color: darken($dark, 5);
}

$global-select-height: 30px;

//
// Standard buttons
//

@mixin setBgColorAndHover($baseColor) {
  background-color: $baseColor;
  &:hover {
    background-color: lighten($baseColor, 5%);
  }
}

button {
  color: $btn-text-color;
  min-height: 25px;
  // line-height: 10px;
}

.btn {
  min-height: 25px;
  line-height: 13px; /* Make this equal to the height */
  /* other styles if needed */
  // font-weight: bold;
}

button:hover {
  color: $btn-text-color;
}

.btn-success,
.btn-success:focus {
  color: $btn-text-color !important;
  @include setBgColorAndHover($success);
  border-color: darken($success, 15%);
  outline: darken($success, 15%) solid 2px;
}

.btn-info,
.btn-info:focus {
  color: $btn-text-color !important;
  @include setBgColorAndHover($info);
  border-color: darken($info, 15%);
  outline: darken($info, 15%) solid 2px;
}

.btn-danger,
.btn-danger:focus {
  color: $btn-text-color !important;
  @include setBgColorAndHover($danger);
  border-color: darken($danger, 15%);
  outline: darken($danger, 15%) solid 2px;
}

.btn-secondary,
.btn-secondary:focus {
  color: $btn-text-color !important;
  @include setBgColorAndHover($secondary);
  border-color: darken($secondary, 15%);
  outline: darken($secondary, 15%) solid 2px;
}

.btn-warning,
.btn-warning:focus {
  color: $btn-text-color !important;
  @include setBgColorAndHover($warning);
  border-color: darken($warning, 15%);
  outline: darken($warning, 15%) solid 2px;
}

.btn-primary,
.btn-primary:focus {
  color: $btn-text-color !important;
  @include setBgColorAndHover($primary);
  border-color: darken($primary, 15%);
  outline: darken($primary, 15%) solid 2px;
}

button:disabled {
  color: darken($btn-text-color, 10%);
  background-color: $disabled;
  // border-color: darken($disabled, 10%);
  border-width: 0px;
  outline: #050506 solid 2px;
  &:hover {
    background-color: $disabled;
  }
}

.structure {
  height: calc(100vh - $navbar-height);
}

.sub-structure {
  height: calc(100% - $focusbar-height);
}

.sub-sub-structure {
  height: calc(100vh - $focusbar-height - $navbar-height - 60px - 1rem);
}

.text-box-container,
.text-box-container:hover {
  min-height: 25px;
  line-height: 13px;
  color: $btn-text-color;
  background-color: $disabled;
  border-color: lighten($disabled, 20%);
  outline: lighten($disabled, 15%) solid 2px;
}

.box-container {
  color: $btn-text-color;
  background-color: $disabled;
  border-color: lighten($disabled, 20%);
  outline: lighten($disabled, 15%) solid 3px;
  padding: 10px;
  border-radius: 0.375rem;
  overflow: auto;
}

.box-container-blank {
  color: $btn-text-color;
  // border-color: lighten($disabled, 20%);
  // outline: lighten($disabled, 15%) solid 3px;
  padding: 10px;
  border-radius: 0.375rem;
  overflow: auto;
}

.box-container::-webkit-scrollbar-track {
  padding: 0px 0;
  background-color: $dark;
}

.box-container::-webkit-scrollbar {
  width: 5px;
}

.box-container::-webkit-scrollbar-thumb {
  background-color: $body-color;
}

.freq-box {
  margin-left: 25px;
  overflow-x: hidden;
  overflow-y: auto;
  float: left;
  height: 100%;
  width: 65%;
  padding: 0;
}

.focusbar-container {
  height: $focusbar-height;
  width: 100%;
  position: fixed;
  padding: 0 4px;
  bottom: 0;
  left: 0;
  z-index: 1000;
}

// When changing the max-width property make sure to update the miniModeWidthBreakpoint constant in
// the toggleMiniMode method in index.ts as well.
@media only screen and (max-width: $mini-mode-width-break-point) {
  .freq-box {
    display: none;
  }
}

@media only screen and (max-width: 670px) {
  .freq-box {
    width: calc(100% - 50px);
    margin-right: 25px;
  }
}

.right-box {
  height: 100%;
  width: 25%;
  float: right;
  margin-right: 25px;
  overflow-y: auto;
  overflow-x: hidden;
}

@media only screen and (max-width: 670px) {
  .hide-right-box {
    display: none;
  }
}

.radio-list-expanded {
  width: 100%;
}

.radio-inactive {
  background-color: $disabled !important;
}

.radio-settings-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  border-radius: 0.375rem;
  z-index: 100;
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s ease;

  &.active {
    opacity: 1;
    pointer-events: auto;
  }
}

.radio-sidebar {
  all: unset;
  position: absolute;
  top: 0px;
  left: 5px;
  font-weight: 600;
  // width: 7px;
  // height: 7px;
  // border-radius: 50%;
  // background-color: $primary;
  z-index: 1000;
}

.radio-settings {
  all: unset;
  font-size: 11px;
  font-weight: 600;
  height: 12px;

  :hover {
    color: white;
  }
}

.radio {
  width: 205px;
  height: 90px;
  // margin: 5px;
  padding: 10px;
  color: $btn-text-color;
  background-color: lighten($disabled, 5%);
  border-radius: 0.375rem;
  outline: lighten($disabled, 25%) solid 2px;
  transition: background-color 0.2s ease;

  &:hover {
    background-color: lighten($disabled, 10%);
  }

  // Main layout container
  .radio-content {
    height: 100%;
    display: flex;
    gap: 5%;
  }

  // Left side with frequency and controls
  .radio-left {
    width: 48%;
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 5%;
  }

  // Right side with RX/TX
  .radio-right {
    width: 48%;
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 10%;
  }

  // Header button
  .radio-header {
    width: 100%;
    height: 45%;
    margin-bottom: 4%;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0;
    background: transparent;
    border: none;
    outline: none;
    cursor: pointer;

    .radio-text-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      // gap: 1px;
    }

    .frequency {
      font-size: 15px;
      line-height: 1;
      font-weight: 500;
    }

    .callsign {
      font-size: 14px;
      line-height: 1;
      font-weight: normal;
    }
  }

  .radio-controls {
    height: 45%;
    display: flex;
    gap: 10%;

    .control-btn {
      flex: 1;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }

  .radio-button {
    width: 100%;
    height: 45%;
    display: flex;
    justify-content: center;
    align-items: center;
  }
}

// Grid container for multiple radios
.radio-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(205px, 1fr));
  gap: 10px;
  padding: 10px;
}

// Media queries
@media (max-width: $mini-mode-width-break-point) {
  .radio-grid {
    grid-template-columns: 1fr;
  }

  .radio {
    width: 100%;
  }
}

select:disabled {
  color: darken($btn-text-color, 40%);
  background-color: #28283c !important;
  border-color: darken($disabled, 10%);
}

@media only screen and (max-width: 450px) {
  .hide-settings-flex {
    display: none;
  }
}

@media only screen and (max-width: 350px) {
  .hide-connect-flex {
    display: none;
  }
}

@media only screen and (max-width: 670px) {
  .volume-slider {
    display: none;
  }
}

@media only screen and (max-width: 550px) {
  .hide-volume-value {
    display: none;
  }
}

#stationInput {
  text-transform: uppercase;
}

.settingsModalBackground {
  background-color: rgba(255, 255, 255, 0.163);
  display: block;
}

.settingsModal {
  border-color: lighten($disabled, 20%);
  outline: lighten($disabled, 25%) solid 4px;
  border-radius: var(--bs-modal-border-radius);
}

.btn-no-interact,
.btn-no-interact:focus,
.btn-no-interact:hover,
.btn-no-interact:active {
  border: none;
  outline: none;
  cursor: pointer;
}

.modal-body::-webkit-scrollbar-thumb {
  background-color: $body-color;
}

.btn-no-interact {
  border: none;
  outline: none;
  cursor: pointer;
  background: transparent;
  width: 100%;
  padding: 0.25rem;

  &:focus,
  &:hover,
  &:active {
    border: none;
    outline: none;
  }
}

.licenses {
  font-size: 11px;
  line-height: 1;
}

.elapsed-time {
  font-size: 13px;
}

.alert-popup {
  float: left;
  width: 60%;
  z-index: 1056;
  position: absolute;
  top: 0;
  left: 20%;
  margin-top: 5%;
  line-height: 25px;
}

.btn-sm {
  height: 20px;
  line-height: 10px;
}

.volume-slider {
  width: 15%;
}

.color-warning {
  color: $warning !important;
}

.mini {
  display: none;
  // height: calc(100vh - 14px) !important;
  // width: calc(100% - 14px);
  // margin-right: 7px;
  // margin-left: 7px;
  margin-top: 1px;
  // margin-bottom: 7px;
  float: left;
  font-size: $mini-font-size;
}

.radio-list {
  max-height: 80vh;
  overflow-y: auto;
}

// When changing the max-width property make sure to update the miniModeWidthBreakpoint constant in
// the toggleMiniMode method in index.ts as well.
@media only screen and (max-width: $mini-mode-width-break-point) {
  .mini {
    display: block;
  }
}

// When changing the max-width property make sure to update the miniModeWidthBreakpoint constant in
// the toggleMiniMode method in index.ts as well.
@media only screen and (max-width: $mini-mode-width-break-point) {
  .hide-topbar {
    display: none !important;
  }
}

.exit-mini-mode-container {
  position: absolute;
  top: 10px;
  right: 10px;
  display: inline-block;
  transition: opacity 0.3s ease-in-out;
}

.exit-mini-mode-container.visible {
  opacity: 1;
}

.exit-mini-mode-container.hidden {
  opacity: 0;
}

::-webkit-scrollbar {
  width: 5px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: rgb(50, 50, 58); /* Color of the scrollbar thumb */
  border-radius: 2px; /* Rounded corners of the scrollbar thumb */
}

::-webkit-scrollbar-thumb:hover {
  background: lighten(rgb(50, 50, 58), 10%); /* Color of the scrollbar thumb on hover */
}

.radio-text {
  font-size: 20px;
  font-weight: 600;
}

.radio-sub-text {
  font-size: 13px;
}

.connection-status {
  min-width: 90px;
}

.cursor {
  -webkit-app-region: no-drag;
  cursor: pointer;
}

* {
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
